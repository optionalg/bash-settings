#!/bin/echo "This file is meant to be sourced from the command or .bashrc"
###
# include this file like this to activate .bash
##
## [[ -f ~/.bash/sourcing ]] && time source ~/.bash/sourcing
##

###
export DOTBASH_DEBUG=true
if [[ -n "$DOTBASH_DEBUG" ]] ; then echo "sourcing imported"; fi

### I want to make a more verbose source '.' function.
### under time
### it should check for existence
### echo the file name
###  source the file
### time returns



#source ~/.bash/common/terminal.sh
#set -x
alias eecho="echo \>\>\> "
## set our local host name (eg. everything before the first period.)
myName=$(uname -n | cut -f1 -d.)
mySystem=$(uname -s)

eecho ''
eecho '(re-)sourcing your .bash/ configurations'

if [[ $mySystem == "Darwin" ]]; then
	eecho "System: Darwin"
        ## if my ~/.bash/mb$HOSTNAME file exists
        [ -f ~/.bash/mb-$myName.sh ] && eecho "file: mb-$myName" && source ~/.bash/mb-$myName.sh
        [ -f ~/.bash/mbp-$myName.sh ] && eecho "file: mbp-$myName" && source ~/.bash/mbp-$myName.sh
fi
        
if [[ $mySystem == "Linux" ]]; then
	eecho "System: Linux"
        ## if my ~/.bash/server-$HOSTNAME file exists
        [ -f ~/.bash/server-$myName.sh ] && eecho "file: server-$myName" && source ~/.bash/server-$myName.sh

fi

if [[ $mySystem == "MINGW32_NT-6.1" ]] ; then
	eecho "System: MINGW32"

	[ -f ~/.bash/win32-$myName.sh ] && eecho "file: win32-$myName" && source ~/.bash/win32-$myName.sh
	[ -f ~/.bash/win32-desktop.sh ] && eecho "file: win32-desktop" && source ~/.bash/win32-desktop.sh


fi

eecho ''
