#!/bin/echo "This file is meant to be sourced from the command or .bashrc"
<<HEADER1
Use this bash script to automatically source in appropriate files

# include this file like this to activate .bash
#[[ -f ~/.bash/sourcing ]] && time source ~/.bash/sourcing

HEADER1


### for false just leave empty, true is any value.
export DOTBASH_DEBUG=true
export DOTBASH_DTIMER=

## set our local host name (eg. everything before the first period.)
export myName=$(uname -n | cut -f1 -d.)
export mySystem=$(uname -s)

## mark these variable readonly
#readonly myName
readonly mySystem

dir=`dirname "$BASH_SOURCE"`
_dir="$dir" 

alias eecho="echo"
alias eecho="echo \>\>\> "

<<ZOUR_HELP1
## zour makes the wheels go'round
I wanted to make a more verbose source,  '.' or source function.
under time
it should check for existence
echo the file name
 source the file
 time returns
##########
ZOUR_HELP1

function zour {
	if [[ -f "$@" ]]; then
		eecho "file: \"$@\""

		if [[ -z "$DOTBASH_DTIMER" ]] ; then
	 		. "$@"
		else
			echo "Timer results below:"
			time . "$@" 
			echo; echo
		fi
	fi
}
### Just some glamour
eecho ''
eecho '(re-)sourcing your .bash/ configurations'
eecho ''
###
## set -x ### debugging

if [[ $mySystem == "Darwin" ]]; then
	eecho "System: Darwin"
	## use this system name based on the configured name not DNS	
#	myName=`/usr/libexec/PlistBuddy -c 'Print System:Network:HostNames:LocalHostName' /Library/Preferences/SystemConfiguration/preferences.plist`
	myName=$(networksetup -getcomputername 2>/dev/null)

	zour "$_dir/mb-$myName.sh"
	zour "$_dir/mbp-$myName.sh"
	zour "$_dir/imac-$myName.sh"

	## other options for hostname determination
	### /usr/libexec/PlistBuddy -c 'Print System:Network:HostNames:LocalHostName' \
	###         /Library/Preferences/SystemConfiguration/preferences.plist
	### hostname -s
	### networksetup -getcomputername 2>/dev/null
	### system_profiler SPSoftwareDataType |sed '/ *Computer Name: /!d;s///'

fi
###

### Linux Based        
if [[ $mySystem == "Linux" ]]; then
	eecho "System: Linux"
        ## if my ~/.bash/server-$HOSTNAME file exists
        zour "$_dir/server-$myName.sh"
fi
###

### MING on Windows
#if [[ $mySystem =~ /MINGW32_NT/ ]] ; then
if [[ $(echo $mySystem | grep MINGW32_NT) ]] ; then 
	eecho "System: MINGW32"

	zour "$_dir/win32-desktop.sh"
	zour "$_dir/win32-$myName.sh"
fi
###

### Just something extra if it's on.
if [[ ! -z "$DOTBASH_DEBUG" ]] ; then
	eecho "|----------------------"
	eecho "| myName ${myName}"
	eecho "|  sourcing imported"
	eecho "| _dir $_dir "
	eecho "|----------------------"
fi

