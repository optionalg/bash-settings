#!/bin/echo "This file is meant to be sourced from the command or .bashrc"
###
# include this file like this to activate .bash
##
## [[ -f ~/.bash/sourcing ]] && time source ~/.bash/sourcing
##

###
export DOTBASH_DEBUG=true
if [[ -n "$DOTBASH_DEBUG" ]] ; then echo "sourcing imported"; fi

dir=`dirname $BASH_SOURCE`
_dir=$dir 

#echo _dir $_dir

alias eecho="echo"

#alias source="zour"

function zour {
#  history | grep "$1"

[[ -f $1 ]] && echo "file: $1" && time source $@

#time ( source $@  && [[ -f $PWD/$1 ]] && eecho "file: $1" )

## 
#[[ -f $1 ]] && eecho "file: $1" && ls -la && source $@

}



### I want to make a more verbose source '.'/source function.
### under time
### it should check for existence
### echo the file name
###  source the file
### time returns



#source $_dir/common/terminal.sh
#set -x
alias eecho="echo \>\>\> "
## set our local host name (eg. everything before the first period.)
myName=$(uname -n | cut -f1 -d.)
mySystem=$(uname -s)

eecho ''
eecho '(re-)sourcing your .bash/ configurations'
eecho ''

if [[ $mySystem == "Darwin" ]]; then
	eecho "System: Darwin"
        ## if my ~/.bash/mb$HOSTNAME file exists

#echo $PWD
#ls -al $PWD

#. .bash/mb-$myName.sh
myName=`/usr/libexec/PlistBuddy -c 'Print System:Network:HostNames:LocalHostName' /Library/Preferences/SystemConfiguration/preferences.plist`

zour $_dir/mb-$myName.sh
zour $_dir/mbp-$myName.sh

#    [ -f $_dir/mb-$myName.sh ] && eecho "file: mb-$myName" && zour $_dir/mb-$myName.sh
#    [ -f $_dir/mbp-$myName.sh ] && eecho "file: mbp-$myName" && source $_dir/mbp-$myName.sh

## other options for hostname determination

### /usr/libexec/PlistBuddy -c 'Print System:Network:HostNames:LocalHostName' \
###         /Library/Preferences/SystemConfiguration/preferences.plist


### hostname -s
### networksetup -getcomputername 2>/dev/null
### system_profiler SPSoftwareDataType |sed '/ *Computer Name: /!d;s///'


fi
        
if [[ $mySystem == "Linux" ]]; then
	eecho "System: Linux"
        ## if my ~/.bash/server-$HOSTNAME file exists
        [ -f $_dir/server-$myName.sh ] && eecho "file: server-$myName" && source $_dir/server-$myName.sh

fi

if [[ $mySystem == "MINGW32_NT-6.1" ]] ; then
	eecho "System: MINGW32"
	[ -f $_dir/win32-$myName.sh ] && eecho "file: win32-$myName" && source $_dir/win32-$myName.sh
	[ -f $_dir/win32-desktop.sh ] && eecho "file: win32-desktop" && source $_dir/win32-desktop.sh


fi

#eecho ''
